import torch
import PIL
from diffusers import StableDiffusionPipeline


####################################
# Interface for predicting
####################################
def predict(prompt: str, height: int, width: int, num_inference_steps: int, guidance_scale: float, eta: float, generator: torch.Generator, pipe=None, **kwargs) -> PIL.Image:
	''' Args (copied from StableDiffusionPipeline.__call__):
		prompt (`str` or `List[str]`):
			The prompt or prompts to guide the image generation.
		height (`int`, *optional*, defaults to 512):
			The height in pixels of the generated image.
		width (`int`, *optional*, defaults to 512):
			The width in pixels of the generated image.
		num_inference_steps (`int`, *optional*, defaults to 50):
			The number of denoising steps. More denoising steps usually lead to a higher quality image at the
			expense of slower inference.
		guidance_scale (`float`, *optional*, defaults to 7.5):
			Guidance scale as defined in [Classifier-Free Diffusion Guidance](https://arxiv.org/abs/2207.12598).
			`guidance_scale` is defined as `w` of equation 2. of [Imagen
			Paper](https://arxiv.org/pdf/2205.11487.pdf). Guidance scale is enabled by setting `guidance_scale >
			1`. Higher guidance scale encourages to generate images that are closely linked to the text `prompt`,
			usually at the expense of lower image quality.
		eta (`float`, *optional*, defaults to 0.0):
			Corresponds to parameter eta (η) in the DDIM paper: https://arxiv.org/abs/2010.02502. Only applies to
			[`schedulers.DDIMScheduler`], will be ignored for others.
			This includes an original DDPM generative process when η = 1 and DDIM when η = 0.
		generator (`torch.Generator`, *optional*):
			A [torch generator](https://pytorch.org/docs/stable/generated/torch.Generator.html) to make generation
			deterministic.
		latents (`torch.FloatTensor`, *optional*):
			Pre-generated noisy latents, sampled from a Gaussian distribution, to be used as inputs for image
			generation. Can be used to tweak the same generation with different prompts. If not provided, a latents
			tensor will ge generated by sampling using the supplied random `generator`.
		output_type (`str`, *optional*, defaults to `"pil"`):
			The output format of the generate image. Choose between
			[PIL](https://pillow.readthedocs.io/en/stable/): `PIL.Image.Image` or `nd.array`.
		return_dict (`bool`, *optional*, defaults to `True`):
			Whether or not to return a [`~pipelines.stable_diffusion.StableDiffusionPipelineOutput`] instead of a
			plain tuple.
	'''
	pipe.__class__ = StableDiffusionPipeline

	with torch.autocast("cuda"):
		image = pipe(
			prompt, 
			height=height,
			width=width, 
			num_inference_steps=num_inference_steps, 
			guidance_scale=guidance_scale, 
			eta=eta, 
			generator=generator,
		)["images"][0]
	return image
